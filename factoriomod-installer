#!/usr/bin/env perl

use strict;
use warnings;
use MIME::Base64;
use Logging::Simple;
use JSON::Parse ':all';
use WWW::Curl;
use WWW::Curl::Easy;
#use Data::Dumper;

# This is the download location, including trailing slash
my $mod_dir = "/usr/games/factorio/mods/";

# init logging
my $log = Logging::Simple->new(name => 'FactorioModInstaller', file => '/tmp/fmi.log', level => 7);
BEGIN { $SIG{__DIE__} = sub { $log->critical($_[0]) }; }

# init curl
my $curl = WWW::Curl::Easy->new();
$curl->setopt(CURLOPT_HEADERFUNCTION, \&write_callback);
$curl->setopt(CURLOPT_WRITEFUNCTION, \&write_callback);
my (@head,@body);
$curl->setopt(CURLOPT_WRITEHEADER, \@head);
$curl->setopt(CURLOPT_WRITEDATA, \@body);

my $terminal = 0;
if (-t STDIN) {$terminal = 1;}

if ( @ARGV eq 1 )
{
  # get & parse uri
  my $uri = $ARGV[0];
  $uri =~ /factoriomods:\/\/([\w].*)/;
  my $enc = $1;

  # json decode
  my $json = decode_base64($enc);
  if (!valid_json($json))
  {
    die("Could not parse URI.");
  }
  my $data = parse_json($json);
  $log->info("Found '$data->{'title'}' mod");

  # get most recent release
  my $releases = $data->{'releases'};
  my $recent = $data->{'releases'}[0];
  foreach my $ref (@{$releases})
  {
    if ( $ref->{'id'} gt $recent->{'id'} )
    {
      $recent = $ref;
    }
  }

  # get download url
  my $durl = $recent->{'files'}[0]{'url'} || $recent->{'files'}[0]{'mirror'};

  # attempt to check that file doesn't already exist
  $durl =~ /([^\/\\&\?]+\.\w{3,4})(?=([\?&].*$|$))/;
  if (-f $mod_dir.$1)
  {
    die("File already exists. Aborting.");
  }

  # download file
  $log->info("Downloading $durl");
  my $path = download($durl,$mod_dir);
  if ($path !~ /^(-)?[\d]+$/)
  {
    $log->info("Success: ".$path);
    msg($data->{'title'}." installed.");
  }
  else
  {
    die("Error: ".$curl->strerror($path)." ".$curl->errbuf);
  }

}
else
{
  $log->error("Wrong script args: ".join(',',@ARGV));
  die("Expecting one argument in the form 'factoriomods://BASE64ENCODEDJSON");
}


sub msg {
  if ($terminal)
  {
    print "$_[0]\n";
  }
  else
  {
    `notify-send "Factorio Mod Installer" "$_[0]"`;
  }
}

sub download {
  (my $url, my $dir) = @_;
  $curl->setopt(CURLOPT_URL, $url);
  $curl->setopt(CURLOPT_FOLLOWLOCATION,1);

  my $ret = $curl->perform();

  if ($ret == 0)
  {
    # stringify content
    my $head = join("",@head);
    my $body = join("",@body);

    # check for rename
    my $content_name;
    if ($head =~ /Content-Disposition.*UTF-8''(.+\.zip)/mi)
    {
      $content_name = $1;
      $log->debug("Regex match: $1");
    }
    elsif ($url =~ /([^\/\\&\?]+\.\w{3,4})(?=([\?&].*$|$))/)
    {
      $content_name = $1;
      $log->debug("Regex match: $1");
    }
    else
    {
      die("Couldn't find filename");
    }
    $log->info("File: $content_name, length ".length($body));

    # double check here now we have headers
    if (-f $dir.$content_name)
    {
      die("File already exists. Aborting.");
    }

    my $path = $dir."/".$content_name;
    open(FH,">",$path) || die("Failed to open save path.");
    print FH "$body";
    close FH;

    return $path;
  }
  else
  {
    return $ret;
  }
}

sub write_callback {
  my ($chunk,$variable)=@_;
  # store each chunk/line separately
  # This should be faster than using $$varable .= $chunk;
  push @{$variable}, $chunk;
  return length($chunk);
}
